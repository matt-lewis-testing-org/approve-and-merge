name: update actions

on:
  workflow_dispatch:
    inputs:
      gh_token:
        required: true
        description: a github app token with write permissions to workflow

permissions:
  contents: write
  actions: write

jobs:
  update-actions:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ inputs.gh_token }}

    - name: Randomize Branch
      run: |
        random_number="$((RANDOM % 99999))"
        branch_name="update_actions_${random_number}"

        echo "BRANCH_NAME=$branch_name" >> "$GITHUB_ENV"

    - name: Create Branch
      run: |
        git fetch
        git checkout -b ${{ env.BRANCH_NAME }}
        git branch --set-upstream-to=origin/${{ env.BRANCH_NAME }} ${{ env.BRANCH_NAME }} || exit 0
        git pull -ff

        git branch
        git rev-parse --abbrev-ref HEAD
    
    - name: get initial info
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      run: |
        SHA=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/matt-lewis-testing-org/reusable-actions/commits | jq 'first(.[].sha)' | tr -d '"')
        # Replace above org

        gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/matt-lewis-testing-org/reusable-actions/commits/$SHA > response.json 
        # Replace above org

        ACTIONS=$(jq -r '.files[].filename' response.json | grep '.github/actions/.*/action.yml$' | awk -F'/' '{print $3}')

        # Clean up
        rm response.json
        
        echo "SHA: $SHA"
        echo "Actions List: "
        for action in $ACTIONS_LIST; do
          echo "Actions: $action"
        done
        
        echo "ACTIONS_LIST=$ACTIONS" >> "$GITHUB_ENV"
        echo "UPDATED_SHA=$SHA" >> "$GITHUB_ENV"

    - name: update actions
      id: update-actions
      if: env.ACTIONS_LIST != ''
      run: |
        updated_sha=${{ env.UPDATED_SHA }}
        
        for action_name in ${{ env.ACTIONS_LIST }}; do
          search_dir="./.github/workflows"
          search_string="matt-lewis-testing-org/reusable-actions/.github/actions/$action_name@"
          # Replace above org

          file_list=$(grep -rl "$search_string" "$search_dir")

          echo "action name: '$action_name'"
          
          for file in $file_list; do
            if sed -i "s|${search_string}[[:space:]]*.*|${search_string}${updated_sha}|" "$file"; then
              cat "$file"
            else
              echo "Action not used in any workflows."
            fi
          
          done
        done
      
    - name: Commit changes and commit PR
      if: env.ACTIONS_LIST != ''
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      run: |
        git config user.name "Updating GitHub Actions"
        git config user.email "<>"
        git commit -am "Updated Actions to newest SHA" || exit 0
        git push --set-upstream origin ${{ env.BRANCH_NAME }}

        pr_url=$(gh pr create \
        -B main \
        -H ${{ env.BRANCH_NAME }} \
        --title 'Update of GitHub Actions SHA' \
        --body 'Created by Github action') || exit 0

        echo "PR_URL=${pr_url}" >> "$GITHUB_ENV"

    - name: Message if no actions were changed
      if: env.ACTIONS_LIST == ''
      run: |
        echo "List of actions needing to be changed is empty, no files updated."
